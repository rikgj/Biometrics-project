import random
import os

'''
Provides two lists containing randomly selected images from rnd_list
generated by get_rnd_img_list. These list can be used as reference and probe
The function expect the naming convention [id]d[img_num], len(id) = 5
'''

LOAD_RND_FILE = './lists/rnd_list_12.txt'
LIMIT = 12  # given by rnd_list_n, imgs per id
N_AS_REFERENCE = 3

if N_AS_REFERENCE > LIMIT:
    print('N_AS_REFERENCE cant be bigger than LIMIT')
    exit()

n_as_probes = LIMIT - N_AS_REFERENCE
SAVE_PROBE = './lists/rnd_probe_' + str(n_as_probes) + '.txt'
SAVE_REFERENCE = './lists/rnd_reference_' + str(N_AS_REFERENCE) + '.txt'


def create_ref_probe_file():
    rnd_list = []  # replace with get_rnd_list
    id_imgs = []

    with open(LOAD_RND_FILE, "r") as file:
        for line in file:
            line = line.strip()
            rnd_list.append(line)

    # group imgs by id
    rnd_list.sort()
    i = rnd_list[0].index('d')
    cur_id = rnd_list[0][0:i]
    cur_id_imgs = []

    for line in rnd_list:
        id = line[0:i]
        if cur_id != id:
            if len(cur_id_imgs) != LIMIT:
                print('ERROR! Wrong length: ', len(cur_id_imgs))
            id_imgs.append(cur_id_imgs)
            cur_id_imgs = []
            cur_id = id
        cur_id_imgs.append(line)
    id_imgs.append(cur_id_imgs)  # add last ID

    references = []
    probes = []
    # for each id, divide into reference and probe
    for id in id_imgs:
        ref = random.sample(id, k=N_AS_REFERENCE)
        probe = [pr for pr in id if pr not in ref]
        references.append(ref)
        probes.append(probe)

    # save variables to file
    with open(SAVE_PROBE, 'w') as file:
        for id in probes:
            for img in id:
                file.write(img + '\n')

    with open(SAVE_REFERENCE, 'w') as file:
        for id in references:
            for img in id:
                file.write(img + '\n')
    print('Files stored')


if __name__ == '__main__':
    if os.path.exists(SAVE_PROBE) or os.path.exists(SAVE_REFERENCE):
        print('RND files exists, delete or rename, before running this')
    else:
        create_ref_probe_file()
